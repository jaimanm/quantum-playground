import { GateDefinition } from "../types/circuit";

export const gateDefinitions: GateDefinition[] = [
  {
    type: "H",
    name: "Hadamard",
    description: "Creates superposition",
    category: "single",
    icon: "H",
    color: "bg-blue-500",
    numQubits: 1,
    hasParams: false,
    tooltip:
      "Creates an equal superposition of |0⟩ and |1⟩. Like flipping a quantum coin!",
  },
  {
    type: "X",
    name: "Pauli-X",
    description: "Quantum NOT gate",
    category: "single",
    icon: "X",
    color: "bg-red-500",
    numQubits: 1,
    hasParams: false,
    tooltip:
      "Flips |0⟩ to |1⟩ and vice versa. The quantum version of a NOT gate.",
  },
  {
    type: "Y",
    name: "Pauli-Y",
    description: "Rotation around Y-axis",
    category: "single",
    icon: "Y",
    color: "bg-red-600",
    numQubits: 1,
    hasParams: false,
    tooltip:
      "Flips the qubit and adds a phase. Rotates around the Y-axis of the Bloch sphere.",
  },
  {
    type: "Z",
    name: "Pauli-Z",
    description: "Phase flip",
    category: "single",
    icon: "Z",
    color: "bg-red-700",
    numQubits: 1,
    hasParams: false,
    tooltip: "Flips the phase of |1⟩. Leaves |0⟩ unchanged.",
  },
  {
    type: "S",
    name: "S Gate",
    description: "Phase gate (π/2)",
    category: "single",
    icon: "S",
    color: "bg-purple-500",
    numQubits: 1,
    hasParams: false,
    tooltip: "Applies a 90° phase rotation. Square root of Z gate.",
  },
  {
    type: "T",
    name: "T Gate",
    description: "Phase gate (π/4)",
    category: "single",
    icon: "T",
    color: "bg-purple-600",
    numQubits: 1,
    hasParams: false,
    tooltip: "Applies a 45° phase rotation. Important for quantum algorithms.",
  },
  {
    type: "RX",
    name: "RX Rotation",
    description: "Rotate around X-axis",
    category: "rotation",
    icon: "RX",
    color: "bg-orange-500",
    numQubits: 1,
    hasParams: true,
    tooltip: "Rotates the qubit around the X-axis by a custom angle.",
  },
  {
    type: "RY",
    name: "RY Rotation",
    description: "Rotate around Y-axis",
    category: "rotation",
    icon: "RY",
    color: "bg-orange-600",
    numQubits: 1,
    hasParams: true,
    tooltip: "Rotates the qubit around the Y-axis by a custom angle.",
  },
  {
    type: "RZ",
    name: "RZ Rotation",
    description: "Rotate around Z-axis",
    category: "rotation",
    icon: "RZ",
    color: "bg-orange-700",
    numQubits: 1,
    hasParams: true,
    tooltip: "Rotates the qubit around the Z-axis by a custom angle.",
  },
  {
    type: "CNOT",
    name: "CNOT",
    description: "Controlled-NOT",
    category: "controlled",
    icon: "⊕",
    color: "bg-green-500",
    numQubits: 2,
    hasParams: false,
    controlCount: 1,
    tooltip:
      "Flips the target qubit if the control qubit is |1⟩. Creates entanglement!",
  },
  {
    type: "CZ",
    name: "CZ",
    description: "Controlled-Z",
    category: "controlled",
    icon: "CZ",
    color: "bg-green-600",
    numQubits: 2,
    hasParams: false,
    controlCount: 1,
    tooltip: "Applies a phase flip to the target if the control is |1⟩.",
  },
  {
    type: "SWAP",
    name: "SWAP",
    description: "Swap two qubits",
    category: "controlled",
    icon: "⇄",
    color: "bg-teal-500",
    numQubits: 2,
    hasParams: false,
    tooltip:
      "Swaps the states of two qubits. Exchanges their quantum information.",
  },
  {
    type: "Toffoli",
    name: "Toffoli",
    description: "Controlled-Controlled-NOT",
    category: "controlled",
    icon: "CCX",
    color: "bg-green-700",
    numQubits: 3,
    hasParams: false,
    controlCount: 2,
    tooltip:
      "Flips the target if both control qubits are |1⟩. Universal quantum gate!",
  },
];

export const getGatesByCategory = (category: string) =>
  gateDefinitions.filter((gate) => gate.category === category);

export const getGateDefinition = (type: string) =>
  gateDefinitions.find((gate) => gate.type === type);
